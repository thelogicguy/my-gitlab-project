name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json  # Ensure clean state
          npm install # Regenerate package-lock.json if needed
          npm ci # Run clean install to match package-lock.json

      - name: Run tests
        run: npm test
        
      - name: Package application
        run: zip -r app.zip *  # Zip the application files

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "app.zip"
          target: "~/app.zip"

      - name: Deploy application on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p ~/my-app  # Create the deployment directory if it doesn't exist
            unzip -o ~/app.zip -d ~/my-app
            cd ~/my-app
            npm ci
            pm2 stop my-app || true  # Stop the previous instance if running
            pm2 start server.js --name "my-app"

